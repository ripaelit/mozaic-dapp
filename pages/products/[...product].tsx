import React, { useEffect, useState } from 'react';
import Head from 'next/head';
import PageTitle from '../../lib/components/common/PageTitle';
import { useRouter } from 'next/router';
import KnowledgeBase from '../../lib/components/productInDepth/KnowledgeBase';
import ProductDetails from '../../lib/components/productInDepth/ProductDetails';
import ProductSummary from '../../lib/components/productInDepth/ProductSummary';
import ProductChart from '../../lib/components/productInDepth/charts/ProductChart';
import ProductInfo from '../../lib/components/productInDepth/ProductInfo';
import axios from 'axios';
import { LoadErrorType } from '../../lib/types/common';
import PageErrorReloader from '../../lib/components/common/error/PageErrorReloader';
import TitleBtn from '../../lib/components/common/button/TitleBtn';
import { productDetailsDummyData } from '../../lib/data/dummy/DummyData';

export default function Product() {
  const router = useRouter();
  const query: any = router.query;

  // loading state
  const [loading, setLoading] = useState<boolean>(true);

  // error state
  const [error, setError] = useState<null | LoadErrorType>(null);

  // initial product data
  const [productData, setProductData] = useState<any>();

  useEffect(() => {
    setLoading(true);
    if (router.isReady) {
      // axios
      //   .get(`/productDetails/?id=${query.id}`)
      //   .then((res) => {
      //     setProductData(res.data[0]);
      //     setLoading(false);
      //   })
      //   .catch((err) => {
      //     setError({
      //       message: err.message,
      //       status: err.status,
      //       code: err.code,
      //     });
      //     setLoading(false);
      //   });

      setProductData(productDetailsDummyData[query.id]);
      setLoading(false);
    }
  }, [router.isReady]);
  return (
    <>
      <Head>
        {!loading && <title>{`Mozaic - ${!productData ? 'loading' : productData.name}`}</title>}
        <meta name='description' content='Generated by create next app' />
      </Head>
      <main className='product-container'>
        <PageTitle
          title={!productData ? 'Loading...' : productData.name!}
          rightElement={
            <TitleBtn
              button={{ text: 'Back to Products', icon: '/assets/icons/ico.back.svg', href: '/' }}
            />
          }
        />
        {!loading ? (
          !error ? (
            // product list
            <>
              <div className='product-head-wrapper'>
                <ProductInfo product={productData} />
                <ProductChart
                  chartData={productData.chart}
                  style={`
                    flex: 1;
                `}
                />
              </div>
              <ProductSummary />
              <ProductDetails data={productData} />
              <KnowledgeBase />
            </>
          ) : (
            // on error this error message will be shown
            <PageErrorReloader {...error} />
          )
        ) : (
          // on loading this loader component will be shown
          <>
            <p>Loading...</p>
          </>
        )}
      </main>
      <style jsx>{`
        .product-container {
          display: flex;
          flex-direction: column;
          align-items: center;
          height: 100%;
          width: 100%;
          gap: 32px;
          padding-bottom: 96px;
        }
        .product-head-wrapper {
          display: flex;
          width: 100%;
          gap: 32px;
          flex-wrap: wrap;
        }
      `}</style>
    </>
  );
}
